#include "errno-error.h"

// Define our "err_code" function autogenerated at the bottom
static const char *code(int e);

namespace Errno {

  using namespace Napi;

  Error ErrnoError(
    Env env,
    int e,
    const char *syscall,
    const char *path,
    const char *message
  ) {
    Error error = Error::New(env, message == nullptr ? e == 0 ? "No Error" : strerror(e) : message);

    error.Set("errno", Number::New(env, e));
    error.Set("code", String::New(env, code(e)));

    if (syscall != nullptr) error.Set("syscall", String::New(env, syscall));
    if (path != nullptr) error.Set("path", String::New(env, path));

    return error;
  }
}

/* ========================================================================== *
 * AUTO-GENERATED - do not modify                                             *
 * ========================================================================== */
// Use "if" instead of "switch"/"case" for duplicate error numbers...
#define CASE_LABEL(er) if (e == er) return #er

// Return a string ("E2BIG") for an error code number (E2BIG)
static const char *code(int e) {
  if (e == 0) return "ENOERR";

  #ifdef E2BIG
    CASE_LABEL(E2BIG);
  #endif // ifdef E2BIG

  #ifdef EACCES
    CASE_LABEL(EACCES);
  #endif // ifdef EACCES

  #ifdef EADDRINUSE
    CASE_LABEL(EADDRINUSE);
  #endif // ifdef EADDRINUSE

  #ifdef EADDRNOTAVAIL
    CASE_LABEL(EADDRNOTAVAIL);
  #endif // ifdef EADDRNOTAVAIL

  #ifdef EADV
    CASE_LABEL(EADV);
  #endif // ifdef EADV

  #ifdef EAFNOSUPPORT
    CASE_LABEL(EAFNOSUPPORT);
  #endif // ifdef EAFNOSUPPORT

  #ifdef EAGAIN
    CASE_LABEL(EAGAIN);
  #endif // ifdef EAGAIN

  #ifdef EALREADY
    CASE_LABEL(EALREADY);
  #endif // ifdef EALREADY

  #ifdef EAUTH
    CASE_LABEL(EAUTH);
  #endif // ifdef EAUTH

  #ifdef EBADARCH
    CASE_LABEL(EBADARCH);
  #endif // ifdef EBADARCH

  #ifdef EBADE
    CASE_LABEL(EBADE);
  #endif // ifdef EBADE

  #ifdef EBADEXEC
    CASE_LABEL(EBADEXEC);
  #endif // ifdef EBADEXEC

  #ifdef EBADF
    CASE_LABEL(EBADF);
  #endif // ifdef EBADF

  #ifdef EBADFD
    CASE_LABEL(EBADFD);
  #endif // ifdef EBADFD

  #ifdef EBADMACHO
    CASE_LABEL(EBADMACHO);
  #endif // ifdef EBADMACHO

  #ifdef EBADMSG
    CASE_LABEL(EBADMSG);
  #endif // ifdef EBADMSG

  #ifdef EBADR
    CASE_LABEL(EBADR);
  #endif // ifdef EBADR

  #ifdef EBADRPC
    CASE_LABEL(EBADRPC);
  #endif // ifdef EBADRPC

  #ifdef EBADRQC
    CASE_LABEL(EBADRQC);
  #endif // ifdef EBADRQC

  #ifdef EBADSLT
    CASE_LABEL(EBADSLT);
  #endif // ifdef EBADSLT

  #ifdef EBFONT
    CASE_LABEL(EBFONT);
  #endif // ifdef EBFONT

  #ifdef EBUSY
    CASE_LABEL(EBUSY);
  #endif // ifdef EBUSY

  #ifdef ECANCELED
    CASE_LABEL(ECANCELED);
  #endif // ifdef ECANCELED

  #ifdef ECHILD
    CASE_LABEL(ECHILD);
  #endif // ifdef ECHILD

  #ifdef ECHRNG
    CASE_LABEL(ECHRNG);
  #endif // ifdef ECHRNG

  #ifdef ECOMM
    CASE_LABEL(ECOMM);
  #endif // ifdef ECOMM

  #ifdef ECONNABORTED
    CASE_LABEL(ECONNABORTED);
  #endif // ifdef ECONNABORTED

  #ifdef ECONNREFUSED
    CASE_LABEL(ECONNREFUSED);
  #endif // ifdef ECONNREFUSED

  #ifdef ECONNRESET
    CASE_LABEL(ECONNRESET);
  #endif // ifdef ECONNRESET

  #ifdef EDEADLK
    CASE_LABEL(EDEADLK);
  #endif // ifdef EDEADLK

  #ifdef EDESTADDRREQ
    CASE_LABEL(EDESTADDRREQ);
  #endif // ifdef EDESTADDRREQ

  #ifdef EDEVERR
    CASE_LABEL(EDEVERR);
  #endif // ifdef EDEVERR

  #ifdef EDOM
    CASE_LABEL(EDOM);
  #endif // ifdef EDOM

  #ifdef EDOTDOT
    CASE_LABEL(EDOTDOT);
  #endif // ifdef EDOTDOT

  #ifdef EDQUOT
    CASE_LABEL(EDQUOT);
  #endif // ifdef EDQUOT

  #ifdef EEXIST
    CASE_LABEL(EEXIST);
  #endif // ifdef EEXIST

  #ifdef EFAULT
    CASE_LABEL(EFAULT);
  #endif // ifdef EFAULT

  #ifdef EFBIG
    CASE_LABEL(EFBIG);
  #endif // ifdef EFBIG

  #ifdef EFTYPE
    CASE_LABEL(EFTYPE);
  #endif // ifdef EFTYPE

  #ifdef EHOSTDOWN
    CASE_LABEL(EHOSTDOWN);
  #endif // ifdef EHOSTDOWN

  #ifdef EHOSTUNREACH
    CASE_LABEL(EHOSTUNREACH);
  #endif // ifdef EHOSTUNREACH

  #ifdef EHWPOISON
    CASE_LABEL(EHWPOISON);
  #endif // ifdef EHWPOISON

  #ifdef EIDRM
    CASE_LABEL(EIDRM);
  #endif // ifdef EIDRM

  #ifdef EILSEQ
    CASE_LABEL(EILSEQ);
  #endif // ifdef EILSEQ

  #ifdef EINPROGRESS
    CASE_LABEL(EINPROGRESS);
  #endif // ifdef EINPROGRESS

  #ifdef EINTR
    CASE_LABEL(EINTR);
  #endif // ifdef EINTR

  #ifdef EINVAL
    CASE_LABEL(EINVAL);
  #endif // ifdef EINVAL

  #ifdef EIO
    CASE_LABEL(EIO);
  #endif // ifdef EIO

  #ifdef EISCONN
    CASE_LABEL(EISCONN);
  #endif // ifdef EISCONN

  #ifdef EISDIR
    CASE_LABEL(EISDIR);
  #endif // ifdef EISDIR

  #ifdef EISNAM
    CASE_LABEL(EISNAM);
  #endif // ifdef EISNAM

  #ifdef EKEYEXPIRED
    CASE_LABEL(EKEYEXPIRED);
  #endif // ifdef EKEYEXPIRED

  #ifdef EKEYREJECTED
    CASE_LABEL(EKEYREJECTED);
  #endif // ifdef EKEYREJECTED

  #ifdef EKEYREVOKED
    CASE_LABEL(EKEYREVOKED);
  #endif // ifdef EKEYREVOKED

  #ifdef EL2HLT
    CASE_LABEL(EL2HLT);
  #endif // ifdef EL2HLT

  #ifdef EL2NSYNC
    CASE_LABEL(EL2NSYNC);
  #endif // ifdef EL2NSYNC

  #ifdef EL3HLT
    CASE_LABEL(EL3HLT);
  #endif // ifdef EL3HLT

  #ifdef EL3RST
    CASE_LABEL(EL3RST);
  #endif // ifdef EL3RST

  #ifdef ELAST
    CASE_LABEL(ELAST);
  #endif // ifdef ELAST

  #ifdef ELIBACC
    CASE_LABEL(ELIBACC);
  #endif // ifdef ELIBACC

  #ifdef ELIBBAD
    CASE_LABEL(ELIBBAD);
  #endif // ifdef ELIBBAD

  #ifdef ELIBEXEC
    CASE_LABEL(ELIBEXEC);
  #endif // ifdef ELIBEXEC

  #ifdef ELIBMAX
    CASE_LABEL(ELIBMAX);
  #endif // ifdef ELIBMAX

  #ifdef ELIBSCN
    CASE_LABEL(ELIBSCN);
  #endif // ifdef ELIBSCN

  #ifdef ELNRNG
    CASE_LABEL(ELNRNG);
  #endif // ifdef ELNRNG

  #ifdef ELOOP
    CASE_LABEL(ELOOP);
  #endif // ifdef ELOOP

  #ifdef EMEDIUMTYPE
    CASE_LABEL(EMEDIUMTYPE);
  #endif // ifdef EMEDIUMTYPE

  #ifdef EMFILE
    CASE_LABEL(EMFILE);
  #endif // ifdef EMFILE

  #ifdef EMLINK
    CASE_LABEL(EMLINK);
  #endif // ifdef EMLINK

  #ifdef EMSGSIZE
    CASE_LABEL(EMSGSIZE);
  #endif // ifdef EMSGSIZE

  #ifdef EMULTIHOP
    CASE_LABEL(EMULTIHOP);
  #endif // ifdef EMULTIHOP

  #ifdef ENAMETOOLONG
    CASE_LABEL(ENAMETOOLONG);
  #endif // ifdef ENAMETOOLONG

  #ifdef ENAVAIL
    CASE_LABEL(ENAVAIL);
  #endif // ifdef ENAVAIL

  #ifdef ENEEDAUTH
    CASE_LABEL(ENEEDAUTH);
  #endif // ifdef ENEEDAUTH

  #ifdef ENETDOWN
    CASE_LABEL(ENETDOWN);
  #endif // ifdef ENETDOWN

  #ifdef ENETRESET
    CASE_LABEL(ENETRESET);
  #endif // ifdef ENETRESET

  #ifdef ENETUNREACH
    CASE_LABEL(ENETUNREACH);
  #endif // ifdef ENETUNREACH

  #ifdef ENFILE
    CASE_LABEL(ENFILE);
  #endif // ifdef ENFILE

  #ifdef ENOANO
    CASE_LABEL(ENOANO);
  #endif // ifdef ENOANO

  #ifdef ENOATTR
    CASE_LABEL(ENOATTR);
  #endif // ifdef ENOATTR

  #ifdef ENOBUFS
    CASE_LABEL(ENOBUFS);
  #endif // ifdef ENOBUFS

  #ifdef ENOCSI
    CASE_LABEL(ENOCSI);
  #endif // ifdef ENOCSI

  #ifdef ENODATA
    CASE_LABEL(ENODATA);
  #endif // ifdef ENODATA

  #ifdef ENODEV
    CASE_LABEL(ENODEV);
  #endif // ifdef ENODEV

  #ifdef ENOENT
    CASE_LABEL(ENOENT);
  #endif // ifdef ENOENT

  #ifdef ENOEXEC
    CASE_LABEL(ENOEXEC);
  #endif // ifdef ENOEXEC

  #ifdef ENOKEY
    CASE_LABEL(ENOKEY);
  #endif // ifdef ENOKEY

  #ifdef ENOLCK
    CASE_LABEL(ENOLCK);
  #endif // ifdef ENOLCK

  #ifdef ENOLINK
    CASE_LABEL(ENOLINK);
  #endif // ifdef ENOLINK

  #ifdef ENOMEDIUM
    CASE_LABEL(ENOMEDIUM);
  #endif // ifdef ENOMEDIUM

  #ifdef ENOMEM
    CASE_LABEL(ENOMEM);
  #endif // ifdef ENOMEM

  #ifdef ENOMSG
    CASE_LABEL(ENOMSG);
  #endif // ifdef ENOMSG

  #ifdef ENONET
    CASE_LABEL(ENONET);
  #endif // ifdef ENONET

  #ifdef ENOPKG
    CASE_LABEL(ENOPKG);
  #endif // ifdef ENOPKG

  #ifdef ENOPOLICY
    CASE_LABEL(ENOPOLICY);
  #endif // ifdef ENOPOLICY

  #ifdef ENOPROTOOPT
    CASE_LABEL(ENOPROTOOPT);
  #endif // ifdef ENOPROTOOPT

  #ifdef ENOSPC
    CASE_LABEL(ENOSPC);
  #endif // ifdef ENOSPC

  #ifdef ENOSR
    CASE_LABEL(ENOSR);
  #endif // ifdef ENOSR

  #ifdef ENOSTR
    CASE_LABEL(ENOSTR);
  #endif // ifdef ENOSTR

  #ifdef ENOSYS
    CASE_LABEL(ENOSYS);
  #endif // ifdef ENOSYS

  #ifdef ENOTBLK
    CASE_LABEL(ENOTBLK);
  #endif // ifdef ENOTBLK

  #ifdef ENOTCONN
    CASE_LABEL(ENOTCONN);
  #endif // ifdef ENOTCONN

  #ifdef ENOTDIR
    CASE_LABEL(ENOTDIR);
  #endif // ifdef ENOTDIR

  #ifdef ENOTEMPTY
    CASE_LABEL(ENOTEMPTY);
  #endif // ifdef ENOTEMPTY

  #ifdef ENOTNAM
    CASE_LABEL(ENOTNAM);
  #endif // ifdef ENOTNAM

  #ifdef ENOTRECOVERABLE
    CASE_LABEL(ENOTRECOVERABLE);
  #endif // ifdef ENOTRECOVERABLE

  #ifdef ENOTSOCK
    CASE_LABEL(ENOTSOCK);
  #endif // ifdef ENOTSOCK

  #ifdef ENOTSUP
    CASE_LABEL(ENOTSUP);
  #endif // ifdef ENOTSUP

  #ifdef ENOTTY
    CASE_LABEL(ENOTTY);
  #endif // ifdef ENOTTY

  #ifdef ENOTUNIQ
    CASE_LABEL(ENOTUNIQ);
  #endif // ifdef ENOTUNIQ

  #ifdef ENXIO
    CASE_LABEL(ENXIO);
  #endif // ifdef ENXIO

  #ifdef EOPNOTSUPP
    CASE_LABEL(EOPNOTSUPP);
  #endif // ifdef EOPNOTSUPP

  #ifdef EOVERFLOW
    CASE_LABEL(EOVERFLOW);
  #endif // ifdef EOVERFLOW

  #ifdef EOWNERDEAD
    CASE_LABEL(EOWNERDEAD);
  #endif // ifdef EOWNERDEAD

  #ifdef EPERM
    CASE_LABEL(EPERM);
  #endif // ifdef EPERM

  #ifdef EPFNOSUPPORT
    CASE_LABEL(EPFNOSUPPORT);
  #endif // ifdef EPFNOSUPPORT

  #ifdef EPIPE
    CASE_LABEL(EPIPE);
  #endif // ifdef EPIPE

  #ifdef EPROCLIM
    CASE_LABEL(EPROCLIM);
  #endif // ifdef EPROCLIM

  #ifdef EPROCUNAVAIL
    CASE_LABEL(EPROCUNAVAIL);
  #endif // ifdef EPROCUNAVAIL

  #ifdef EPROGMISMATCH
    CASE_LABEL(EPROGMISMATCH);
  #endif // ifdef EPROGMISMATCH

  #ifdef EPROGUNAVAIL
    CASE_LABEL(EPROGUNAVAIL);
  #endif // ifdef EPROGUNAVAIL

  #ifdef EPROTO
    CASE_LABEL(EPROTO);
  #endif // ifdef EPROTO

  #ifdef EPROTONOSUPPORT
    CASE_LABEL(EPROTONOSUPPORT);
  #endif // ifdef EPROTONOSUPPORT

  #ifdef EPROTOTYPE
    CASE_LABEL(EPROTOTYPE);
  #endif // ifdef EPROTOTYPE

  #ifdef EPWROFF
    CASE_LABEL(EPWROFF);
  #endif // ifdef EPWROFF

  #ifdef EQFULL
    CASE_LABEL(EQFULL);
  #endif // ifdef EQFULL

  #ifdef ERANGE
    CASE_LABEL(ERANGE);
  #endif // ifdef ERANGE

  #ifdef EREMCHG
    CASE_LABEL(EREMCHG);
  #endif // ifdef EREMCHG

  #ifdef EREMOTE
    CASE_LABEL(EREMOTE);
  #endif // ifdef EREMOTE

  #ifdef EREMOTEIO
    CASE_LABEL(EREMOTEIO);
  #endif // ifdef EREMOTEIO

  #ifdef ERESTART
    CASE_LABEL(ERESTART);
  #endif // ifdef ERESTART

  #ifdef ERFKILL
    CASE_LABEL(ERFKILL);
  #endif // ifdef ERFKILL

  #ifdef EROFS
    CASE_LABEL(EROFS);
  #endif // ifdef EROFS

  #ifdef ERPCMISMATCH
    CASE_LABEL(ERPCMISMATCH);
  #endif // ifdef ERPCMISMATCH

  #ifdef ESHLIBVERS
    CASE_LABEL(ESHLIBVERS);
  #endif // ifdef ESHLIBVERS

  #ifdef ESHUTDOWN
    CASE_LABEL(ESHUTDOWN);
  #endif // ifdef ESHUTDOWN

  #ifdef ESOCKTNOSUPPORT
    CASE_LABEL(ESOCKTNOSUPPORT);
  #endif // ifdef ESOCKTNOSUPPORT

  #ifdef ESPIPE
    CASE_LABEL(ESPIPE);
  #endif // ifdef ESPIPE

  #ifdef ESRCH
    CASE_LABEL(ESRCH);
  #endif // ifdef ESRCH

  #ifdef ESRMNT
    CASE_LABEL(ESRMNT);
  #endif // ifdef ESRMNT

  #ifdef ESTALE
    CASE_LABEL(ESTALE);
  #endif // ifdef ESTALE

  #ifdef ESTRPIPE
    CASE_LABEL(ESTRPIPE);
  #endif // ifdef ESTRPIPE

  #ifdef ETIME
    CASE_LABEL(ETIME);
  #endif // ifdef ETIME

  #ifdef ETIMEDOUT
    CASE_LABEL(ETIMEDOUT);
  #endif // ifdef ETIMEDOUT

  #ifdef ETOOMANYREFS
    CASE_LABEL(ETOOMANYREFS);
  #endif // ifdef ETOOMANYREFS

  #ifdef ETXTBSY
    CASE_LABEL(ETXTBSY);
  #endif // ifdef ETXTBSY

  #ifdef EUCLEAN
    CASE_LABEL(EUCLEAN);
  #endif // ifdef EUCLEAN

  #ifdef EUNATCH
    CASE_LABEL(EUNATCH);
  #endif // ifdef EUNATCH

  #ifdef EUSERS
    CASE_LABEL(EUSERS);
  #endif // ifdef EUSERS

  #ifdef EXDEV
    CASE_LABEL(EXDEV);
  #endif // ifdef EXDEV

  #ifdef EXFULL
    CASE_LABEL(EXFULL);
  #endif // ifdef EXFULL

  return "EUNKNOWN";
}
